/* This class defines the base attributes of the skin */
.controller.custom {
    background: url(drawing.svg);
    background-repeat: no-repeat;
    background-position: 0px 0px;
    width: 970px;
    height: 424px;
    margin-left: -485px;
    margin-top: -212px;
}
.custom.disconnected {
    background: url(drawing.svg);
    background-position: 0px -424px;
    background-repeat: no-repeat;
}

/* This hides the controller's button when disconnected so only the background image remains */
.custom.disconnected div {
    display: none;
}

/* The triggers are housed inside a div, so this sizes the div properly and positions it */
.custom .triggers {
    width: 759px;
    height: 34px;
    position: absolute;
    left: 104px;
}

/* These are the actual triggers themselves */
.custom .trigger {
    width: 211px;
    height: 34px;
    background: url(drawing.svg);
    background-position: -967px 0px;
    background-repeat: no-repeat;
    opacity: 0;
}
.custom .trigger.left {
    float: left;
}
.custom .trigger.right {
    float: right;
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
}

/* The bumpers follow the same methodology as the triggers in terms of
placement */
/*.custom .bumper {*/
    /*width: 89px;*/
    /*height: 28px;*/
    /*background: url();*/
    /*opacity: 0;*/
/*}*/
/*.custom .bumpers {*/
    /*position: absolute;*/
    /*width: 586px;*/
    /*height: 28px;*/
    /*left: 99px;*/
    /*top: 72px;*/
/*}*/
/*.custom .bumper.pressed { [> The '.pressed' class is used for most buttons to signify they've been pressed <]*/
    /*opacity: 1;*/
/*}*/
/*.custom .bumper.left {*/
  /*/* Call me lazy or smart, but why should I make 2 bumpers when they're symmetrical*/
  /*and I can just rotate them in the browser? Also, note that you most likely won't need*/
  /*to use a browser speficic prefix unless it's something that is indeed browser specific.*/
  /*NOTE: CLR Browser is basically chrome, so you use '-webkit-' as the browser prefix. */*/
    /*-webkit-transform: rotateY(180deg);*/
    /*transform: rotateY(180deg);*/
    /*float: left;*/
/*}*/
/*.custom .bumper.right {*/
    /*float: right;*/
/*}*/

/* This bit of code is for the player indicator, which is represented in quandrants on the xbox controller. */
.custom .quadrant {
    position: absolute;
    height: 17px;
    width: 111px;
    top: 140px;
    left: 240px;
}

/* Since the player indicator is just a CSS sprite, we change the
position of the background to match the player number.
NOTE: Player orderin starts at 0, so p0 = Player 1 */
.custom .p0 {
    background-position: 0 -6px;
}
.custom .p1 {
    background-position: 0 -28px;
}
.custom .p2 {
    background-position: 0 -49px;
}
.custom .p3 {
    background-position: 0 -70px;
}

/* This is to size and position the containing div for the start and select buttons. */
.custom .arrows {
    position: absolute;
    width: 176px;
    height: 62px;
    top: 214px;
    left: 358px;
}

/* Setting the size and CSS sprite for the start adn select buttons */
.custom .back, .custom .start {
    width: 71.5px;
    height: 61.5px;
}
.custom .back.pressed, .custom .start.pressed {
    background: url(drawing.svg);
    background-position: -1177.5px 0px;
}
.custom .back {
    float: left;
}
.custom .start {
    float: right;
}

/* Positioning and size of the container for the face buttons */
.custom .abxy {
    position: absolute;
    width: 259px;
    height: 218px;
    top: 105px;
    left: 633px;
}

/* base class used to simplify the sprite mapping */
.custom .button {
    position: absolute;
    width:75px;
    height:75px;
}
.custom .button.pressed {
    background: url(drawing.svg);
    background-position-x: -1249px;
}
.custom .a {
    top: 143px;
    left: 92px;
}
.custom .b {
    top: 71px;
    right: 0px;
}
.custom .x {
    top: 71px;
}
.custom .y {
    left: 92px;
}

/* Dpad possitioning and sizing */
.custom .dpad {
    position: absolute;
    width: 146px;
    height: 146px;
    top: 142px;
    left: 133px;
}
.custom .face {
    position: absolute;
}
.custom .face.up, .custom .face.down {
    width: 33.5px;
    height: 34px;
}
.custom .face.left, .custom .face.right {
    width: 34px;
    height: 33.5px;
}
.custom .face.up {
    left: 56px;
    top: 0;
    background-position: 92px 0px;
}
.custom .face.down {
    left: 56px;
    top: 112px;
    background-position: 131px 0;
    -webkit-transform: rotateX(180deg);
    transform: rotateX(180deg);
}
.custom .face.left {
    top: 56px;
    left: 0;
    background-position: 0px 0;
    -webkit-transform: rotate(-90deg);
    transform: rotate(-90deg);
}
.custom .face.right {
    top: 56px;
    right: 0px;
    background-position: 53px 0;
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
}
.custom .face.pressed {
    background: url(drawing.svg);
    background-position-x: -1323px;
}

/* NOTE: You NEED to set this to exactly half the height of what is listed
for '.controller.custom' so when your skin is activated via player selection
parameters it will be correctly centered on screen. */
.custom.half {
    margin-top: -279px;
}
